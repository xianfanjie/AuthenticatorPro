name: Build

on:
  workflow_dispatch:

env:
  FRAMEWORK: net8.0-android
  CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Android workload
        run: dotnet workload install android

      - name: Install Android platform tools
        run: $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install platform-tools

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Run tests
        run: dotnet test --configuration $CONFIGURATION --no-restore --collect:"XPlat Code Coverage" --results-directory ./coverage AuthenticatorPro.Test/AuthenticatorPro.Test.csproj

      - name: Publish Android
        run: |
          cd AuthenticatorPro.Droid
          echo ${{ secrets.RELEASE_KEYSTORE_BASE64 }} | base64 -d > release.keystore
          dotnet publish -f:$FRAMEWORK -c:$CONFIGURATION --no-restore -p:AndroidKeyStore=true -p:AndroidSigningKeyStore=release.keystore -p:AndroidSigningKeyAlias=${{ secrets.KEY_ALIAS }} -p:AndroidSigningKeyPass=${{ secrets.KEY_PASS }} -p:AndroidSigningStorePass=${{ secrets.STORE_PASS }} -p:AndroidPackageFormats=apk
          cd ..
          APK=$(find AuthenticatorPro.Droid/bin/$CONFIGURATION/$FRAMEWORK/publish -name '*.apk')
          mv $APK "me.jmh.authenticatorpro.apk"

      - name: Generate coverage report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          format: markdown
          output: both
          thresholds: '60 80'

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AuthenticatorPro
          path: |
            me.jmh.authenticatorpro*.apk
            code-coverage-results.md
